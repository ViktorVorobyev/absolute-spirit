import asyncio
import random
from aiogram import Router, F
from aiogram.types import Message

from core.bot_instance import bot, gpt_client
from core.constants import RESPONSES, EMPTY_RESPONSES
from core.config import TARGET_CHAT_ID

router = Router()

from core.persona import BOT_CHARACTER  # –•–∞—Ä–∞–∫—Ç–µ—Ä –±–æ—Ç–∞

# –ê–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Üí –≤ –≥—Ä—É–ø–ø—É
@router.message(F.chat.type == "private")
async def handle_private_message(message: Message):
    text = message.text or ""
    if not text.strip():
        await message.answer(random.choice(EMPTY_RESPONSES))
        return

    await message.chat.do("typing")

    # üß† –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—Å—Ç–∞ —á–µ—Ä–µ–∑ GPT
    try:
        moderation_prompt = (f"""
            –¢—ã ‚Äî –º–æ–¥–µ—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞
            {BOT_CHARACTER}
            –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Ü–µ–Ω–∏, –º–æ–∂–Ω–æ –ª–∏ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –µ–≥–æ –≤ –∞–Ω–æ–Ω–∏–º–Ω–æ–π –≥—Ä—É–ø–ø–µ.
            –ó–∞–ø—Ä–µ—â–µ–Ω—ã: –ø—Ä—è–º—ã–µ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è, —Ä–∞–∑–∂–∏–≥–∞–Ω–∏–µ –Ω–µ–Ω–∞–≤–∏—Å—Ç–∏ (–Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π, —Ä–∞—Å–æ–≤–æ–π, –ø–æ–ª–æ–≤–æ–π), –∞–≥—Ä–µ—Å—Å–∏—è, –Ω–µ–ø—Ä–∏—Å—Ç–æ–π–Ω–æ—Å—Ç—å, —Ç—Ä–∞–≤–ª—è, –Ω–µ–ø—Ä–∏–µ–º–ª–µ–º—ã–π —Å–µ–∫—Å—É–∞–ª—å–Ω—ã–π –∏–ª–∏ —Å–∞–¥–∏—Å—Ç—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç, —á—Ä–µ–∑–º–µ—Ä–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–µ–ø–æ–Ω—è—Ç–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤, –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω—ã—Ö —Ä–∏—Å—É–Ω–∫–æ–≤ –∏–∑ —Å–∏–º–≤–æ–ª–æ–≤ (ASCII-–∞—Ä—Ç), –æ–¥–Ω–æ—Ç–∏–ø–Ω—ã—Ö –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è —Å—Ç—Ä–æ–∫, —à—É–º–∞ –∏–ª–∏ —Å–ø–∞–º–∞.
            –î–æ–ø—É—Å—Ç–∏–º—ã: –∏—Ä–æ–Ω–∏—è, —Å–∞—Ä–∫–∞–∑–º, –∫—Ä–∏—Ç–∏–∫–∞, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –ø—Ä–æ–≤–æ–∫–∞—Ü–∏–æ–Ω–Ω—ã–º–∏, –Ω–æ –Ω–µ –Ω–∞—Ä—É—à–∞—é—Ç –ø—Ä—è–º—ã–µ –∑–∞–ø—Ä–µ—Ç—ã.
            –î–æ–ø—É—Å—Ç–∏–º—ã –∏—Å–∫–ª—é—á–µ–Ω–∏—è —Å–ª–æ–≤ –∏ –∏—Ö –≤–∞—Ä–∏–∞—Ü–∏–π: –≥–æ–π–¥–∞.
            –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏–µ–º–ª–µ–º–æ ‚Äî –æ—Ç–≤–µ—Ç—å —Å—Ç—Ä–æ–≥–æ OK. –ï—Å–ª–∏ –Ω–µ—Ç ‚Äî –æ–±—ä—è—Å–Ω–∏, –ø–æ—á–µ–º—É –∏–º–µ–Ω–Ω–æ –æ–Ω–æ –Ω–∞—Ä—É—à–∞–µ—Ç –ø—Ä–∞–≤–∏–ª–∞, –ø—Ä–æ—Å—Ç–æ —É–∫–∞–∂–∏ –ø—Ä–∏—á–∏–Ω—É, –Ω–∞–ø—Ä–∏–º–µ—Ä: ASCII-—Å–ø–∞–º, –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω–∞—è –ª–µ–∫—Å–∏–∫–∞, —Ä–∞–∑–∂–∏–≥–∞–Ω–∏–µ –Ω–µ–Ω–∞–≤–∏—Å—Ç–∏.
            """
        )

        messages = [
            {"role": "system", "content": moderation_prompt},
            {"role": "user", "content": text}
        ]

        moderation_response = await asyncio.to_thread(
            gpt_client.chat.completions.create,
            model="gpt-3.5-turbo",
            messages=messages,
            temperature=0.0,
            max_tokens=100,
        )

        result = moderation_response.choices[0].message.content.strip()

        if result.upper().startswith("OK"):
            await bot.send_message(chat_id=TARGET_CHAT_ID, text=text)
            await message.answer(random.choice(RESPONSES))
        else:
            await message.answer(f"‚ö†Ô∏è –ê–±—Å–æ–ª—é—Ç–Ω—ã–π –¥—É—Ö –æ—Ç–∫–ª–æ–Ω–∏–ª –ø–æ—Å–ª–∞–Ω–∏–µ:\n{result}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        await message.answer("‚ö†Ô∏è –ê–±—Å–æ–ª—é—Ç–Ω—ã–π –¥—É—Ö –Ω–µ —Å–º–æ–≥ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ—Å–ª–∞–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")

__all__ = ["router"]